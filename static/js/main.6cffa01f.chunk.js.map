{"version":3,"sources":["components/header/Header.js","utils/getWeb3.js","components/proposals/Proposals.js","components/input/Input.js","components/message/Message.js","components/getters/Getters.js","app/App.js","utils/serviceWorker.js","index.js"],"names":["status","name","func","forwardStatus","contract","_status","accounts","eval","value","send","from","connected","then","res","events","WorkflowStatusChange","returnValues","newStatus","StatusButton","props","onClick","Workflow","className","admin","AdminButton","Address","isOwner","Header","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Proposals","proposals","length","map","e","i","key","AddVoterInput","useState","textInput","setTextInput","onSubmit","preventDefault","utils","isAddress","alert","addVoter","onChange","target","type","AddProposalInput","addProposal","VoteProposalInput","proposalId","methods","setVote","hasVotedFunc","min","max","proposalAmount","Input","hasVoted","setHasVoted","getHasVoted","getVoter","call","voter","isVoter","Message","message","Getters","state","voterAddres","voterData","proposalData","winnerId","setState","getVoterInput","getProposal","getOneProposal","getProposalInput","proposal","getWinner","winningProposalID","getWinnerInput","id","this","Component","App","owner","voters","updateStatus","debug","updateAdmin","address","ret","forEach","element","VoterRegistered","voterAddress","getProposals","instance","len","array","proposalsArray","tmp","push","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","VotingContract","networks","Contract","abi","workflowStatus","getPastEvents","fromBlock","toBlock","arrayVoters","eventsProposals","error","componentDidUpdate","on","Boolean","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cffa01f.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\nimport \"./Header.css\"\n\nconst status = [\n\t{name: \"Registration Voters\",\t\t\t\t\tfunc: `contract.methods.startProposalsRegistering()`},\n\t{name: \"Proposals Registering\", \t\t\tfunc: `contract.methods.endProposalsRegistering()`},\n\t{name: \"Proposals Registering Ended\", func: `contract.methods.startVotingSession()`},\n\t{name: \"Voting Session\", \t\t\t\t\t\t\tfunc: `contract.methods.endVotingSession()`},\n\t{name: \"Voting Session Ended\", \t\t\t\tfunc: `contract.methods.tallyVotes()`},\n\t{name: \"Votes Tallied\", \t\t\t\t\t\t\tfunc: null},\n]\n\nfunction forwardStatus(contract, _status, accounts) {\n\teval(status[_status.value].func).send({from: accounts.connected})\n\t\t.then((res) => _status.func(res.events.WorkflowStatusChange.returnValues.newStatus))\n}\n\nfunction StatusButton(props) {\n\treturn (\n\t\t<button onClick={() => forwardStatus(props.contract, props.status, props.accounts)}>\n\t\t\t{'Next >>>'}\n\t\t</button>\n\t)\n}\n\nfunction Workflow(props) {\n\tconst _status = props.status.value;\n\t\treturn (\n\t\t\t<div className=\"Workflow\">\n\t\t\t\t<p>{`${_status}: ${status[_status].name}`}</p>\n\t\t\t\t{props.admin.value && props.status.value < 5 ? \n\t\t\t\t\t<StatusButton \n\t\t\t\t\t\tcontract={props.contract}\n\t\t\t\t\t\tstatus={props.status}\n\t\t\t\t\t\taccounts={props.accounts}\n\t\t\t\t\t/> \n\t\t\t\t\t: null}\n\t\t\t</div>\n\t\t)\n}\n\nfunction AdminButton(props) {\n\treturn (\n\t\t<button onClick={props.admin.func}>\n\t\t\t{props.admin.value ? 'Admin Dashbord' : 'Admin'}\n\t\t\t</button>\n\t)\n}\n\nfunction Address(props) {\n\treturn (\n\t\t<div className=\"Address\">\n\t\t\t<p>{props.accounts.connected}</p>\n\t\t\t{props.accounts.isOwner ? <AdminButton admin={props.admin}/> : null}\n\t\t</div>\n\t)\n}\n\nfunction Header(props) {\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<Workflow\n\t\t\t\tstatus={props.status}\n\t\t\t\tadmin={props.admin}\n\t\t\t\tcontract={props.contract}\n\t\t\t\taccounts={props.accounts}\n\t\t\t/>\n\t\t\t<Address\n\t\t\t\taccounts={props.accounts}\n\t\t\t\tadmin={props.admin}\n\t\t\t/>\n\t\t</div>\n\t\t)\n}\n\nexport default Header;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from \"react\";\n\nfunction Proposals(props) {\n\tif (!props.proposals.length)\n\t\treturn (null);\n\treturn (\n\t\t<div className=\"Proposals\">\n\t\t\t<ul>{props.proposals.map((e, i) => <li key={i}>{`[${i}] - ${e['desc']}`}</li>)}</ul>\n\t\t</div>\n\t)\n}\n\nexport default Proposals","import React, { useState } from 'react'\nimport Proposals from '../proposals/Proposals';\nimport './Input.css'\n\nfunction AddVoterInput(props) {\n\n\tconst [textInput, setTextInput] = useState();\n\n\tconst addVoter = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!props.web3.utils.isAddress(textInput)){\n\t\t\talert('Bad address');\n\t\t\tsetTextInput(\"\");\n\t\t\treturn;\n\t\t}\n\n\t\tprops.addVoter(textInput);\n\t\tsetTextInput(\"\");\n\t}\n\n\treturn (\n\t\t<form onSubmit={addVoter}>\n\t\t\t<input value={textInput} onChange={e => setTextInput(e.target.value)} type=\"text\" />\n\t\t\t<input type=\"submit\" value=\"Add Voter\" />\n\t\t</form>\n\t)\n}\n\nfunction AddProposalInput(props) {\n\n\tconst [textInput, setTextInput] = useState();\n\n\tconst addProposal = (e) => {\n\t\te.preventDefault();\n\t\tprops.addProposal(textInput); \n\t\tsetTextInput(\"\");\n\t}\n\n\treturn (\n\t\t<form onSubmit={addProposal}>\n\t\t\t<input value={textInput} onChange={e => setTextInput(e.target.value)} type=\"text\" />\n\t\t\t<input type=\"submit\" value=\"Add Proposal\" />\n\t\t</form>\n\t)\n}\n\nfunction VoteProposalInput(props){\n\n\tconst [textInput, setTextInput] = useState();\n\n\tconst voteProposal = (e) => {\n\t\tconst proposalId = textInput;\n\t\te.preventDefault();\n\t\tprops.contract.methods.setVote(proposalId)\n\t\t\t.send({from: props.accounts.connected})\n\t\t\t.then(() => {\n\t\t\t\talert(`you have voted for the proposal ${proposalId} (${props.proposals[proposalId]['desc']})`)\n\t\t\t\tprops.hasVotedFunc(true);\n\t\t\t})\n\t\tsetTextInput(\"\");\n\t}\n\n\treturn (\n\t\t<form onSubmit={voteProposal}>\n\t\t\t<input \n\t\t\t\tvalue={textInput}\n\t\t\t\tonChange={e => setTextInput(e.target.value)} \n\t\t\t\ttype=\"number\"\n\t\t\t\tmin={0}\n\t\t\t\tmax={props.proposalAmount - 1}\n\t\t\t/>\n\t\t\t<input type=\"submit\" value=\"Vote Proposal id\" />\n\t\t</form>\n\t)\n}\n\nfunction Input(props) {\n\n\tconst [hasVoted, setHasVoted] = useState(false);\n\n\tconst getHasVoted = async() => {\n\t\tconst voter = await props.contract.methods\n\t\t\t.getVoter(props.accounts.connected)\n\t\t\t.call({from: props.accounts.connected})\n\t\tsetHasVoted(voter['hasVoted']);\n\t}\n\n\tif (props.status == 0 && props.admin.value) {\n\t\treturn (\n\t\t\t<div className='Input'>\n\t\t\t\t<AddVoterInput addVoter={props.addVoter} web3={props.web3}/>\n\t\t\t</div>\n\t\t)\n\t}\n\tif (!props.accounts.isVoter || props.status >= 4)\n\t\treturn (null);\n\n\tgetHasVoted();\n\t\n\tif (props.status == 1)\n\t\treturn (\n\t\t\t<div className='Input'>\n\t\t\t\t<AddProposalInput addProposal={props.addProposal} />\n\t\t\t</div>\n\t\t)\n\tif (hasVoted)\n\t\treturn (\n\t\t\t<div className='Message'>\n\t\t\t\tYOU HAVE ALREADY VOTED\n\t\t\t</div>\n\t\t)\n\tif (props.status == 3 )\n\t\treturn (\n\t\t\t<div className='Input'>\n\t\t\t\t<VoteProposalInput \n\t\t\t\t\tcontract={props.contract}\n\t\t\t\t\thasVotedFunc={setHasVoted}\n\t\t\t\t\tproposalAmount={props.proposalAmount}\n\t\t\t\t\taccounts={props.accounts}\n\t\t\t\t\tproposals={props.proposals}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\treturn (null);\n}\n\nexport default Input;\n","import React from \"react\";\n\nfunction Message(props){\n\tlet message = \"\";\n\tif (!props.accounts.isVoter)\n\t\tmessage = \"YOU ARE NOT A VOTER\"\n\telse if (props.status == 0)\n\t\tmessage = \"PROPOSALS SESSION NOT STARTED YET\"\n\telse if (props.status == 2)\n\t\tmessage = \"VOTE SESSION NOT STARTED YET\"\n\telse if (props.status == 4)\n\t\tmessage = \"VOTE SESSION IS ENDED WAIT FOR TALLY VOTE\"\n\telse\n\t\treturn (null);\n\treturn (\n\t\t<div className=\"Message\">\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Message;","import React, { Component } from \"react\";\n\nimport './Getters.css'\n\nclass Getters extends Component{\n\tstate = {\n\t\tvoterAddres: '',\n\t\tvoterData: '',\n\t\tproposalId: 0,\n\t\tproposalData: '',\n\t\twinnerId: '',\n\t}\n\n\tgetVoter = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!this.props.web3.utils.isAddress(this.state.voterAddres)){\n\t\t\talert('Bad address');\n\t\t\tthis.setState({voterAddres: \"\"});\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.contract.methods.getVoter(this.state.voterAddres)\n\t\t\t.call({from: this.props.accounts.connected})\n\t\t\t.then((res) => \n\t\t\t\tthis.setState({voterData: `Voter (${this.state.voterAddres})\\n\n\t\t\t\tisRegistered: ${res['isRegistered']}\\n\n\t\t\t\thasVoted: ${res['hasVoted']}\\n\n\t\t\t\tvotedProposalId: ${res['votedProposalId']}`}))\n\t\t\t.then(() => this.setState({voterAddres: \"\"}))\n\t}\n\n\tgetVoterInput = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div><form onSubmit={this.getVoter}>\n\t\t\t\t\t<input value={this.state.voterAddres} onChange={(e) =>\n\t\t\t\t\t\tthis.setState({voterAddres: e.target.value})} type=\"text\" />\n\t\t\t\t\t<input type=\"submit\" value=\"Get voter\" />\n\t\t\t\t</form></div>\n\t\t\t\t<div>{this.state.voterData}</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tgetProposal = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.contract.methods.getOneProposal(this.state.proposalId)\n\t\t\t.call({from: this.props.accounts.connected})\n\t\t\t.then((res) => \n\t\t\t\tthis.setState({proposalData: `id (${this.state.proposalId})\\n\n\t\t\t\tdescription: ${res['description']}\\n\n\t\t\t\tvoteCount: ${res['voteCount']}`}))\n\t}\n\n\tgetProposalInput = () => {\n\t\tconst max = !this.props.proposal.length ? 0 : this.props.proposal.length - 1;\n\t\tif (!this.props.proposal.length)\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\tNO PROPOSAL HAS BEEN MADE YET\n\t\t\t\t</div>\n\t\t\t)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div><form onSubmit={this.getProposal}>\n\t\t\t\t\t<input \n\t\t\t\t\t\tvalue={this.state.proposalId}\n\t\t\t\t\t\tonChange={e => this.setState({proposalId: e.target.value})} \n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t/>\n\t\t\t\t\t<input type=\"submit\" value=\"Get proposal\" />\n\t\t\t\t</form></div>\n\t\t\t\t<div>{this.state.proposalData}</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tgetWinner = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.contract.methods.winningProposalID()\n\t\t\t.call()\n\t\t\t.then((res) => this.setState({winnerId: `${res} : ${this.props.proposal[res]['desc']}`}))\n\t}\n\n\tgetWinnerInput = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div><form onSubmit={this.getWinner}>\n\t\t\t\t\t<input type=\"submit\" value=\"Get Winner\" />\n\t\t\t\t</form></div>\n\t\t\t\t<div>{this.state.winnerId}</div>\n\t\t\t</>\n\t\t)\n\t}\n\t\n\trender() {\n\n\t\treturn (\n\t\t\t<div id=\"Getters\">\n\t\t\t\t{this.getVoterInput()}\n\t\t\t\t{this.props.status > 0 ? this.getProposalInput() : null}\n\t\t\t\t{this.props.status == 5 ? this.getWinnerInput() : null}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Getters;","import React, { Component } from \"react\";\nimport VotingContract from \"../contracts/Voting.json\";\nimport getWeb3 from \"../utils/getWeb3\";\n\nimport \"./App.css\";\n\nimport Header from \"../components/header/Header\";\nimport Input from \"../components/input/Input\";\nimport Message from \"../components/message/Message\";\nimport Proposals from \"../components/proposals/Proposals\";\nimport Getters from \"../components/getters/Getters\";\n\nclass App extends Component {\n\tstate = {\n\t\tweb3: null, \n\t\taccounts: { connected: null, owner: null, isOwner: null, isVoter: null}, \n\t\tcontract: null,\n\t\tstatus: { value: null, func: null },\n\t\tadmin: { value: null, func: null },\n\t\tvoters: [],\n\t\tproposals: []\n\t}\n\n\tupdateStatus = (value) => {\n\t\tthis.setState({status:{value, func: this.updateStatus}})\n\t\tconsole.debug('Status Updated')\n\t}\n\n\tupdateAdmin = () => {\n\t\tthis.setState({admin: \n\t\t\t{ value: !this.state.admin.value, func: this.updateAdmin}\n\t\t});\n\t\tconsole.debug(`Admin Dashbord: ${!this.state.admin.value}`);\n\t}\n\n\tisVoter = (address) => {\n\t\tlet ret = false;\n\t\tthis.state.voters.forEach((element) =>\n\t\t\taddress == element ? ret = true : null);\n\t\treturn (ret);\n\t}\n\n\taddVoter = async (address) => {\n\t\tawait this.state.contract.methods.addVoter(address)\n\t\t\t.send({from: this.state.accounts.connected})\n\t\t\t.then((res) =>{\n\t\t\t\tconst voters = [...this.state.voters, \n\t\t\t\t\tres.events.VoterRegistered.returnValues.voterAddress];\n\t\t\t\tthis.setState({voters})\n\t\t\t\tconsole.debug(`Voter ${address} added`);\n\t\t\t\talert(`Voter ${address} added`);\n\t\t\t});\n\t}\n\n\taddProposal = async (proposal) => {\n\t\tawait this.state.contract.methods.addProposal(proposal)\n\t\t\t.send({from: this.state.accounts.connected})\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({proposals: [...this.state.proposals, \n\t\t\t\t\t{'desc': proposal, 'count': 0}]})\n\t\t\t\t})\n\t\tconsole.debug(`Proposal ${proposal} added`);\n\t\talert(`Proposal ${proposal} added`);\n\t}\n\n\tgetProposals = async (instance, len) => {\n\t\tlet array = [];\n\t\tlet ret = [];\n\t\tlet tmp;\n\t\tfor (let i = 0; i < len; i++){\n\t\t\ttry {\n\t\t\t\ttmp = await instance.methods.proposalsArray(i).call();\n\t\t\t\tarray.push(tmp);\n\t\t\t} catch {\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t\tarray.forEach((e) => ret.push({'desc': e['description'], 'count': e['voteCount']}))\n\t\treturn (ret);\n\t}\n\n\tcomponentDidMount = async () => {\n\t\ttry {\n\t\t\t// Get network provider and web3 instance.\n\t\t\tconst web3 = await getWeb3();\n\n\t\t\t// Use web3 to get the user's accounts.\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\n\t\t\t// Get the contract instance.\n\t\t\tconst networkId = await web3.eth.net.getId();\n\t\t\tconst deployedNetwork = VotingContract.networks[networkId];\n\t\t\tconst instance = new web3.eth.Contract(\n\t\t\t\tVotingContract.abi,\n\t\t\t\tdeployedNetwork && deployedNetwork.address,\n\t\t\t);\n\n\t\t\t//t: Get status Worklow\n\t\t\tconst status = await instance.methods.workflowStatus().call();\n\n\t\t\t//t: Get owner\n\t\t\tconst owner = await instance.methods.owner().call();\n\n\t\t\t//t: Get voters\n\t\t\tconst voters = await instance\n\t\t\t\t.getPastEvents('VoterRegistered', { fromBlock: 0, toBlock: 'latest'})\n\t\t\tconst arrayVoters = voters.map(element => element.returnValues.voterAddress);\n\t\t\tthis.setState({voters: arrayVoters});\n\t\t\t\n\t\t\t//t: Get Proposals\n\t\t\tconst eventsProposals = await instance\n\t\t\t\t.getPastEvents('ProposalRegistered', { fromBlock: 0, toBlock: 'latest'})\n\t\t\tconst proposals = await this.getProposals(instance, eventsProposals.length);\n\t\t\t\n\t\t\t// Set web3, accounts, and contract to the state, and then proceed with an\n\t\t\t// example of interacting with the contract's methods.\n\t\t\tthis.setState({ \n\t\t\t\tweb3,\n\t\t\t\taccounts: {\n\t\t\t\t\tconnected: accounts[0],\n\t\t\t\t\towner: owner, \n\t\t\t\t\tisOwner: accounts[0] == owner,\n\t\t\t\t\tisVoter: this.isVoter(accounts[0])}, \n\t\t\t\tcontract: instance, \n\t\t\t\tstatus:{value: status, func: this.updateStatus},\n\t\t\t\tadmin:{value: false, func: this.updateAdmin},\n\t\t\t\tproposals: proposals,\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`,\n\t\t\t\t);\n\t\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tcomponentDidUpdate = async () => {\n\t\twindow.ethereum.on('accountsChanged', async () =>{\n\t\t\tconst accounts = await this.state.web3.eth.getAccounts();\n\t\t\tthis.setState({\n\t\t\t\taccounts: { \n\t\t\t\t\tconnected: accounts[0],\n\t\t\t\t\towner: this.state.accounts.owner,\n\t\t\t\t\tisOwner: accounts == this.state.accounts.owner,\n\t\t\t\t\tisVoter: this.isVoter(accounts[0])},\n\t\t\t\tadmin: {value: false, func: this.updateAdmin}\n\t\t\t});\n\t\t})\n\t}\n\n\trender() {\n\t\tif (!this.state.web3) {\n\t\t\treturn <div>Loading Web3, accounts, and contract...</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header\n\t\t\t\t\taccounts={this.state.accounts}\n\t\t\t\t\tcontract={this.state.contract}\n\t\t\t\t\tstatus={this.state.status}\n\t\t\t\t\tadmin={this.state.admin}\n\t\t\t\t/>\n\t\t\t\t{!this.state.admin.value\n\t\t\t\t\t? <Message\n\t\t\t\t\t\taccounts={this.state.accounts}\n\t\t\t\t\t\tstatus={this.state.status.value}/>\n\t\t\t\t\t: null}\n\t\t\t\t<Input\n\t\t\t\t\taccounts={this.state.accounts}\n\t\t\t\t\taddVoter={this.addVoter}\n\t\t\t\t\taddProposal={this.addProposal}\n\t\t\t\t\tadmin={this.state.admin}\n\t\t\t\t\tstatus={this.state.status.value}\n\t\t\t\t\tcontract={this.state.contract}\n\t\t\t\t\tproposalAmount={this.state.proposals.length}\n\t\t\t\t\tproposals={this.state.proposals}\n\t\t\t\t\tweb3={this.state.web3}\t\t\n\t\t\t\t/>\n\t\t\t\t{this.state.accounts.isVoter\n\t\t\t\t? <Getters\n\t\t\t\t\tproposal={this.state.proposals}\n\t\t\t\t\tstatus={this.state.status.value}\n\t\t\t\t\tcontract={this.state.contract}\n\t\t\t\t\taccounts={this.state.accounts}\n\t\t\t\t\tweb3={this.state.web3}\n\t\t\t\t/>\n\t\t\t\t: null}\n\t\t\t\t{this.state.accounts.isVoter \n\t\t\t\t\t&& this.state.status.value >= 1\n\t\t\t\t\t&& this.state.status.value <= 4\n\t\t\t\t? <Proposals \n\t\t\t\t\tproposals={this.state.proposals}\n\t\t\t\t/>\n\t\t\t\t: null}\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}